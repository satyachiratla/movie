{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchowdary/My World/MovieHTTP/src/App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const dummyMovies = [{\n    id: 1,\n    title: \"Game Of Thrones\",\n    openingText: \"Nine noble families fought to win the Iron Throne.\",\n    releaseDate: \"2011-05-18\"\n  }, {\n    id: 2,\n    title: \"Stranger Things\",\n    openingText: \"This is the second opening text of the movie\",\n    releaseDate: \"2016-05-19\"\n  }];\n  const [movies, setMovies] = useState(dummyMovies);\n  const [isLoading, setIsLoading] = useState(false);\n  const api_key = \"https://api.themoviedb.org/3/tv/popula?api_key=de9929f37ff02f5324c8210f01ea2eff\"; //const api = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=de9929f37ff02f5324c8210f01ea2eff\"\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch(api_key);\n    const data = await response.json();\n    const transformedMovies = data.results.map(dataMovie => {\n      return {\n        id: dataMovie.id,\n        title: dataMovie.name,\n        openingText: dataMovie.overview,\n        releaseDate: dataMovie.first_air_data\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 47\n    }\n  }, \"Found No Movies!\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vivekchowdary/My World/MovieHTTP/src/App.js"],"names":["React","useState","MoviesList","App","dummyMovies","id","title","openingText","releaseDate","movies","setMovies","isLoading","setIsLoading","api_key","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","dataMovie","name","overview","first_air_data","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,iBAFT;AAGEC,IAAAA,WAAW,EAAE,oDAHf;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADkB,EAOlB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,iBAFT;AAGEC,IAAAA,WAAW,EAAE,8CAHf;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAPkB,CAApB;AAeA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACG,WAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMY,OAAO,GACX,iFADF,CAnBa,CAqBb;;AAEA,iBAAeC,kBAAf,GAAoC;AAClCF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACxD,aAAO;AACLjB,QAAAA,EAAE,EAAEiB,SAAS,CAACjB,EADT;AAELC,QAAAA,KAAK,EAAEgB,SAAS,CAACC,IAFZ;AAGLhB,QAAAA,WAAW,EAAEe,SAAS,CAACE,QAHlB;AAILhB,QAAAA,WAAW,EAAEc,SAAS,CAACG;AAJlB,OAAP;AAMD,KAPyB,CAA1B;AAQAf,IAAAA,SAAS,CAACS,iBAAD,CAAT;AACAP,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,SAAD,IAAcF,MAAM,CAACiB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEjB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACiB,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFxC,EAGGf,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHhB,CAJF,CADF;AAYD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const dummyMovies = [\n    {\n      id: 1,\n      title: \"Game Of Thrones\",\n      openingText: \"Nine noble families fought to win the Iron Throne.\",\n      releaseDate: \"2011-05-18\",\n    },\n    {\n      id: 2,\n      title: \"Stranger Things\",\n      openingText: \"This is the second opening text of the movie\",\n      releaseDate: \"2016-05-19\",\n    },\n  ];\n\n  const [movies, setMovies] = useState(dummyMovies);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const api_key =\n    \"https://api.themoviedb.org/3/tv/popula?api_key=de9929f37ff02f5324c8210f01ea2eff\";\n  //const api = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=de9929f37ff02f5324c8210f01ea2eff\"\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true)\n    const response = await fetch(api_key);\n    const data = await response.json();\n    const transformedMovies = data.results.map((dataMovie) => {\n      return {\n        id: dataMovie.id,\n        title: dataMovie.name,\n        openingText: dataMovie.overview,\n        releaseDate: dataMovie.first_air_data,\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false)\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>Found No Movies!</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}